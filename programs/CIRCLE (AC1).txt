push 1000
pop cx ;cx is the current GMEM position

push cx
pop dx; adress of the beg of GMEM

push 0
pop ax ;currentXcoord
push 0
pop bx ;currentYcoord

in {dx + -8};max X of window             dx + -8
in {dx + -4};max Y of window             dx + -4
mkwdw

in {dx + -16} ;x cord of circle center   dx + -16
in {dx + -12} ;y cord of circle center   dx + -12

in {dx + -20} ;radius of circle          dx + -20

call PrintCircle
push -1
popbyte {cx}
drwpc
hlt

NextCx:
    push cx
    push 1
    add
    pop cx
ret

PrintCircle:
fory:
    push 0
    pop ax ;x is zero when going to next line

    forx:
        call GetXSqPlusYSq
        call RadiusSq

        jbe incircle
            call GetXSqPlusYSq
            call AroundRadiusSq
            jae ouofcircle
                call PrintWhitePixel
                jump goodif
            ouofcircle:
        incircle:
            call PrintBlackPixel
        goodif:
        call XPlusOne

        push ax
        push {dx + -8}
        jb forx
    call YPlusOne
    push bx
    push {dx + -4}
    jb fory
ret

GetXSqPlusYSq:
    push bx
    push {dx + -12}
    sub
    push bx
    push {dx + -12}
    sub
    mul
    push ax
    push {dx + -16}
    sub
    push ax
    push {dx + -16}
    sub
    mul
    add
ret

RadiusSq:
    push {dx + -20}
    push {dx + -20}
    mul
ret

AroundRadiusSq:
    push {dx + -20}
    push {dx + -20}
    push 1.2
    mul
    mul
ret

YPlusOne:
    push bx
    push 1
    add
    pop bx
ret

XPlusOne:
    push ax
    push 1
    add
    pop ax
ret

PrintBlackPixel:
    push 173  ; RED chanel
    popbyte {cx}
    call NextCx
    push 255  ; GREEN chanel
    popbyte {cx}
    call NextCx
    push 47  ; BLUE chanel
    popbyte {cx}
    call NextCx
ret

PrintWhitePixel:
    push 139  ; RED chanel
    popbyte {cx}
    call NextCx
    push 0  ; GREEN chanel
    popbyte {cx}
    call NextCx
    push 0  ; BLUE chanel
    popbyte {cx}
    call NextCx
ret
